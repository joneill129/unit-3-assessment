{"version":3,"sources":["components/Circles/Circles.jsx","components/CircleSelector/CircleSelector.jsx","App.js","reportWebVitals.js","index.js"],"names":["Circles","props","className","circleNo","map","circle","idx","selectedCircleIdx","CircleSelector","onClick","handleCircleSelection","App","state","newIdx","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAiBeA,G,YAdC,SAACC,GACb,OACI,mCACA,qBAAKC,UAAU,UAAf,SACCD,EAAME,SAASC,KAAK,SAACC,EAAQC,GAAT,OACpB,qBAAKJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,QAA/D,UACCL,EAAMM,kBAAN,UAAqCD,EAAI,eCUpCE,G,MAhBQ,SAACP,GACpB,OACI,qBAAKC,UAAU,iBAAf,SACKD,EAAME,SAASC,KAAI,SAACC,EAAQC,GAAT,OACpB,wBAEAJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,QAC1DG,QAAS,kBAAMR,EAAMS,sBAAsBJ,IAH3C,SAKCL,EAAMM,oBAAsBD,EAA5B,iBAA4CA,EAAI,EAAhD,qCAAgFA,EAAI,IAJhFD,UCHXF,EAAW,CAAC,IAAK,IAAK,IAAK,KAkClBQ,E,4MA/BbC,MAAQ,CACNL,kBAAmB,G,EAGrBG,sBAAwB,SAACG,GACvB,EAAKC,SAAU,CACbP,kBAAmBM,K,uDAKrB,OACE,sBAAKX,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACEQ,sBAAuBK,KAAKL,sBAC5BP,SAAUA,EACVI,kBAAmBQ,KAAKH,MAAML,oBAEhC,cAAC,EAAD,CACEG,sBAAuBK,KAAKL,sBAC5BP,SAAUA,EACVI,kBAAmBQ,KAAKH,MAAML,8B,GAxBxBS,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.979ae5ab.chunk.js","sourcesContent":["import React from 'react'\nimport './Circles.css'\n\nconst Circles = (props) => {\n    return (\n        <>\n        <div className=\"Circles\">\n        {props.circleNo.map ((circle, idx) =>\n         <div className={props.selectedCircleIdx === idx ? \"selected\" : 'color'}>\n         {props.selectedCircleIdx === idx ? `${idx+1}` : `${idx+1}`}\n         </div>\n        )}\n        </div>\n        </>\n    );\n}\n \nexport default Circles;\n","import React from 'react'\nimport './CircleSelector.css'\n\nconst CircleSelector = (props) => {\n    return (\n        <div className=\"CircleSelector\">\n            {props.circleNo.map((circle, idx) =>\n            <button\n            key={circle}\n            className={props.selectedCircleIdx === idx ? \"selected\" : \"color\"}\n            onClick={() => props.handleCircleSelection(idx)}\n            >\n            {props.selectedCircleIdx === idx ? `Circle ${idx+1} Selected` : `Select Circle ${idx+1}`}\n            </button>\n            )}\n        </div>\n    );\n}\n \nexport default CircleSelector;","import React, { Component } from 'react';\nimport './App.css';\nimport Circles from './components/Circles/Circles'\nimport CircleSelector from './components/CircleSelector/CircleSelector'\n\nconst circleNo = [\"0\", \"1\", \"2\", \"3\"]\n\nclass App extends Component {\n  state = {\n    selectedCircleIdx: 0\n  }\n\n  handleCircleSelection = (newIdx) => {\n    this.setState ({\n      selectedCircleIdx: newIdx\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 3 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n            handleCircleSelection={this.handleCircleSelection}\n            circleNo={circleNo}\n            selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n          <Circles\n            handleCircleSelection={this.handleCircleSelection}\n            circleNo={circleNo}\n            selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}